/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.LabAssistantRole;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.MCHBEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.VitalSigns.VitalSigns;
import Business.VitalSigns.VitalSignsHistory;
import Business.WorkQueue.DoctorWorkRequest;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;


/**
 *
 * @author my pc
 */
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
public class ViewPatientReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPatientReportJPanel
     */
    private JPanel userProcessContainer;
    private VitalSignsHistory vitalSignsHistory;
    private WorkRequest request;
    private UserAccount userAccount;
    private LabOrganization laborganization;
    private Organization organization;
    private Enterprise enterprise;
      private EcoSystem system;
     private LabTestWorkRequest labTestWorkRequest;
    public ViewPatientReportJPanel(JPanel userProcessContainer,VitalSignsHistory vitalSignsHistory,WorkRequest wrequest,UserAccount account,Organization organization,Enterprise enterprise,EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.vitalSignsHistory=vitalSignsHistory;
        this.userAccount=account;
        this.organization=organization;
        this.laborganization=(LabOrganization)organization;
        this.enterprise=enterprise;
        this.system=system;
        this.labTestWorkRequest=(LabTestWorkRequest) wrequest;
        
        //patient.setStatus("InQueue");
        populateTable();
    }
    public void populateTable(){
          DefaultTableModel model = (DefaultTableModel) viewReportJTable.getModel();
        model.setRowCount(0);
       for (WorkRequest request : laborganization.getWorkQueue().getWorkRequestList()){
           if(labTestWorkRequest.getReceiver().equals(request.getSender()))
           if(request instanceof DoctorWorkRequest){
            Object row[] = new Object[6];
           /* row[0] = request;
            row[1] = request.getSender()== null ? null : request.getSender().getEmployee().getName();;
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus() == null ? null : request.getStatus();;
            row[4] = request.getRequestDate();;
            row[5] = request.getResolveDate();; */
           /* if(p.getStatus()==null){
                row[6] = "InQueue";
            }else
            {
            row[6] = p.getStatus();
            }*/
           row[0] = request;
           row[1] =((DoctorWorkRequest) request).getDateOfBirth();
           row[2] = ((DoctorWorkRequest) request).getEmergencyContactName();
           //row[3] = ((DoctorWorkRequest) request).getPregnancyPeriod();
           row[3] = labTestWorkRequest.getRequestDate();
           if (request.getStatus()==null){
               row[4]=  "Lab Processing";
           }
           else{
               row[4]= request.getStatus();
           }
           row[5] = ((DoctorWorkRequest) request).getResponse();
            ((DefaultTableModel) viewReportJTable.getModel()).addRow(row);
      }
     }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewReportJTable = new javax.swing.JTable();
        viewVitalsBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dobTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        domTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        numMonthsTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        contactNameTextField = new javax.swing.JTextField();
        contactNumTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        BloodPressureTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        HaemoglobinTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tempTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        pulseTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        respTextField = new javax.swing.JTextField();
        processButton = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewReportJTable.setBackground(new java.awt.Color(0, 0, 0));
        viewReportJTable.setForeground(new java.awt.Color(255, 255, 255));
        viewReportJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PatientName", "Date of Birth", "Emergency Contact", "Request Date", "Status", "Doctor Response"
            }
        ));
        jScrollPane1.setViewportView(viewReportJTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 701, 92));

        viewVitalsBtn.setBackground(new java.awt.Color(0, 0, 0));
        viewVitalsBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewVitalsBtn.setForeground(new java.awt.Color(255, 255, 255));
        viewVitalsBtn.setText("View Vital Signs");
        viewVitalsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewVitalsBtnActionPerformed(evt);
            }
        });
        jPanel1.add(viewVitalsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, -1, -1));

        jLabel1.setText("Patient Name");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 83, -1));

        nameTextField.setEnabled(false);
        jPanel1.add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 107, -1));

        jLabel2.setText("Date of Birth");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 83, -1));

        dobTextField.setEnabled(false);
        jPanel1.add(dobTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 107, -1));

        jLabel3.setText("Date of Marriage");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 83, -1));

        domTextField.setEnabled(false);
        jPanel1.add(domTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 107, -1));

        jLabel4.setText("Expected Months");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        numMonthsTextField.setEnabled(false);
        jPanel1.add(numMonthsTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 107, -1));

        jLabel5.setText("Emergency Contact Name");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 142, -1));

        contactNameTextField.setEnabled(false);
        jPanel1.add(contactNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 380, 107, -1));

        contactNumTextField.setEnabled(false);
        jPanel1.add(contactNumTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 107, -1));

        jLabel6.setText("Emergency Contact Number");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 153, -1));

        jLabel7.setText("City");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 91, -1));

        cityTextField.setEnabled(false);
        jPanel1.add(cityTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, 107, -1));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 212, -1, -1));

        jLabel9.setText("Blood Pressure");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 100, -1));

        BloodPressureTextField.setEnabled(false);
        BloodPressureTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BloodPressureTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(BloodPressureTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 260, 113, -1));

        jLabel10.setText("Haemoglobin Level");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 290, 100, -1));

        HaemoglobinTextField.setEnabled(false);
        jPanel1.add(HaemoglobinTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 290, 113, -1));

        jLabel11.setText("Temperature");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 320, 100, -1));

        tempTextField.setEnabled(false);
        jPanel1.add(tempTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 320, 113, -1));

        jLabel12.setText("Pulse Rate");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, 100, -1));

        pulseTextField.setEnabled(false);
        jPanel1.add(pulseTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 350, 113, -1));

        jLabel13.setText("Respiration Rate");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 380, 100, -1));

        respTextField.setEnabled(false);
        jPanel1.add(respTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, 113, -1));

        processButton.setBackground(new java.awt.Color(0, 0, 0));
        processButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        processButton.setForeground(new java.awt.Color(255, 255, 255));
        processButton.setText("Refer to Doctor");
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });
        jPanel1.add(processButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 190, -1, -1));

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        jPanel1.add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        jLabel14.setForeground(new java.awt.Color(0, 0, 255));
        jLabel14.setText("**** Vital Signs highlighted in red are priority concern ");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel15.setText("View Patient Report Screen");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 330, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 797, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 486, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewVitalsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewVitalsBtnActionPerformed
        // TODO add your handling code here:
         int copyselectedRow=0;
        int selectedRow = viewReportJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from table");
        }else{
            DoctorWorkRequest v = (DoctorWorkRequest) viewReportJTable.getValueAt(selectedRow, 0);
            if(copyselectedRow!=selectedRow){
                BloodPressureTextField.setBorder(new LineBorder(Color.LIGHT_GRAY));
                 HaemoglobinTextField.setBorder(new LineBorder(Color.LIGHT_GRAY));
                  tempTextField.setBorder(new LineBorder(Color.LIGHT_GRAY));
                  pulseTextField.setBorder(new LineBorder(Color.LIGHT_GRAY));
                  respTextField.setBorder(new LineBorder(Color.LIGHT_GRAY));
                
            }
            copyselectedRow = selectedRow;
            // v.setPatientName(nameTextField.getText());
            nameTextField.setText(v.getPatientName());
            dobTextField.setText(v.getDateOfBirth());
            domTextField.setText(v.getDateOfMarriage());
            contactNameTextField.setText(v.getEmergencyContactName());
            contactNumTextField.setText(String.valueOf(v.getEmergencyContactNumber()));
            numMonthsTextField.setText(String.valueOf(v.getPregnancyPeriod()));
            cityTextField.setText(v.getCity());
            BloodPressureTextField.setText(String.valueOf(v.getBloodPressure()));
            HaemoglobinTextField.setText(String.valueOf(v.getHaemoglobin()));
            tempTextField.setText(String.valueOf(v.getTemperature()));
            pulseTextField.setText(String.valueOf(v.getPulse()));
            respTextField.setText(String.valueOf(v.getRespiration()));
            if((v.getBloodPressure()) < 90 ||(v.getBloodPressure())>140){
            BloodPressureTextField.setBorder(new LineBorder(Color.red));
            
   
        }
              if((v.getHaemoglobin()) < 10 ||(v.getHaemoglobin())>14){
            HaemoglobinTextField.setBorder(new LineBorder(Color.red));
            
        }
           if((v.getTemperature()) < 95 ||(v.getTemperature())>102.2){
            tempTextField.setBorder(new LineBorder(Color.red));
            
        }
               if((v.getPulse()) < 70 ||(v.getPulse())>90){
            pulseTextField.setBorder(new LineBorder(Color.red));
            
        }
                if((v.getRespiration()) < 15 ||(v.getRespiration())>18){
            respTextField.setBorder(new LineBorder(Color.red));
            
        } 
         
           // v.setStatus("Inqueue");
             
            // v.setDateOfBirth(dobTextField.getText());
            //// v.setDateOfMarriage(domTextField.getText());
            // v.setEmergencyContactName(contactNameTextField.getText());
            // v.setPregnancyPeriod(Integer.parseInt(numMonthsTextField.getText()));
            //          v.setEmergencyContactNumber(Double.parseDouble(contactNumTextField.getText()));
            // v.setCity(cityTextField.getText());
            // v.setBloodPressure(Double.parseDouble(BloodPressureTextField.getText()));
            //  v.setHaemoglobin(Double.parseDouble(HaemoglobinTextField.getText()));
            //   v.setTemperature(Double.parseDouble(tempTextField.getText()));
            //   v.setPulse(Integer.parseInt(tempTextField.getText()));
            //  v.setRespiration(Integer.parseInt(respTextField.getText()));
        }
    }//GEN-LAST:event_viewVitalsBtnActionPerformed

    private void BloodPressureTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BloodPressureTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BloodPressureTextFieldActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
         Component[] comps = userProcessContainer.getComponents();
        for(Component comp:comps){
            if(comp instanceof LabAssistantWorkAreaJPanel){
                LabAssistantWorkAreaJPanel labAssistantJpanel =  (LabAssistantWorkAreaJPanel) comp;
                int selectedRow = viewReportJTable.getSelectedRow();
               // LabTestWorkRequest labworkrequest =(LabTestWorkRequest)viewReportJTable.getValueAt(selectedRow, 0);
               // labworkrequest.setStatus("Completed");
                labAssistantJpanel.populateTable();
            }
        }
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backBtnActionPerformed

    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processButtonActionPerformed
        int selectedRow = viewReportJTable.getSelectedRow();
        WorkRequest request = (WorkRequest)viewReportJTable.getValueAt(selectedRow, 0);
     /*   if(request.getStatus().equals("Completed")){
            JOptionPane.showMessageDialog(null, "Patient has already been referred to Doctor");
        }*/
        request.setStatus("Completed");
        //if(labTestWorkRequest.getName().equals(request.getMessage())){
        labTestWorkRequest.setStatus("Completed");
        labTestWorkRequest.setRequestDate(labTestWorkRequest.getDate());
        for(WorkRequest request1:organization.getWorkQueue().getWorkRequestList()){
            if(request1 instanceof LabTestWorkRequest ){
            if(request1.getMessage().equals(labTestWorkRequest.getName())){
            request1.setStatus("Completed");
            labTestWorkRequest.setRequestDate(labTestWorkRequest.getDate());
            labTestWorkRequest.setResolveDate(labTestWorkRequest.getDate());
            }
            }
        }
      //  }
      if(selectedRow<0){
          JOptionPane.showMessageDialog(null, "Please select a patient to refer to Doctor");
      }else{
         // VitalSigns vitalSigns = (VitalSigns)viewReportJTable.getValueAt(selectedRow, 0);
          //LabTestWorkRequest labworkrequest =(LabTestWorkRequest)viewReportJTable.getValueAt(selectedRow, 0);
          //labworkrequest.setStatus("Completed");
          DoctorWorkRequest doctorworkrequest = (DoctorWorkRequest)viewReportJTable.getValueAt(selectedRow, 0);
          populateTable();
          doctorworkrequest.setSender(userAccount);
          doctorworkrequest.setStatus("Sent");
         // doctorworkrequest.setVitalSigns(vitalSigns);
          Organization org = null;
          Enterprise ent = null;
          for (Network network : system.getNetworkList()) {
                    for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (enterprise instanceof HospitalEnterprise) {
                            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                                   if (organization instanceof DoctorOrganization) {
                                    org = organization;
                                    ent = enterprise;
                                    break;
                                }
                                                        
                           }
                        }

                    }
                }
          if (org != null) {
                    //System.out.println("userinterface.Farmer.RequestDoctorTreatmentWorkAreaJPanel.requestTestJButtonActionPerformed()");
                  //  if (org.getEmployeeDirectory().getEmployeeList()
                   ent.getWorkQueue().getWorkRequestList().add(doctorworkrequest);
                    org.getWorkQueue().getWorkRequestList().add(doctorworkrequest);
                    userAccount.getWorkQueue().getWorkRequestList().add(doctorworkrequest);
                    JOptionPane.showMessageDialog(null, "You have successfully submitted your treatment request to Doctor !", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
         // populateRequestTable();
      }
    }//GEN-LAST:event_processButtonActionPerformed
  public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) viewReportJTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request.getClass() != null) {
                String x = request.getClass().toString();
                if (x.equals("class Business.WorkQueue.DoctorWorkRequest")) {
                    DoctorWorkRequest doctorWorkRequest = (DoctorWorkRequest) request;
                    Object[] row = new Object[3];
                    row[0] = doctorWorkRequest.getSender();
                    row[1] = doctorWorkRequest.getPatientName();
                    row[2] = doctorWorkRequest.getStatus();

                    model.addRow(row);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BloodPressureTextField;
    private javax.swing.JTextField HaemoglobinTextField;
    private javax.swing.JButton backBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JTextField contactNameTextField;
    private javax.swing.JTextField contactNumTextField;
    private javax.swing.JTextField dobTextField;
    private javax.swing.JTextField domTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField numMonthsTextField;
    private javax.swing.JButton processButton;
    private javax.swing.JTextField pulseTextField;
    private javax.swing.JTextField respTextField;
    private javax.swing.JTextField tempTextField;
    private javax.swing.JTable viewReportJTable;
    private javax.swing.JButton viewVitalsBtn;
    // End of variables declaration//GEN-END:variables
}
